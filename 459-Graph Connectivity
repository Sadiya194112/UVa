@Sadiya

#include<bits/stdc++.h>
using namespace std;
const int N = 27;
vector<int> adj[N];
bool vis[N];

void dfs(int src){
    vis[src]=1;
    for(int i=0; i<adj[src].size(); i++){
        int x = adj[src][i];
        if(vis[x]==0){
            dfs(x);
        }
    }
}

int main(){
    int tc,n,u,v;
    char c[2], s[3];
    scanf("%d\n", &tc);

    while(tc--){

        gets(c);
        n = c[0]-64;
//        cout<<n<<endl;

        while(gets(s)){
            if(s[0]=='\0')  break;

            u = s[0]-65;
            v = s[1]-65;
            adj[u].push_back(v);
            adj[v].push_back(u);
        }
//        for(int i=0; i<n; i++){
//            for(int j=0; j<adj[i].size(); j++){
//                cout<<adj[i][j]<<" ";
//            }
//            cout<<endl;
//        }

        int cnt=0;
        memset(vis, 0, sizeof(vis));
        for(int i=0; i<n; i++){
            if(vis[i]==0){
                dfs(i);
                cnt++;
            }
        }
        cout<<cnt<<endl;
        if(tc)   cout<<endl;
        for(int i=0; i<n; i++){
            adj[i].clear();
        }

    }
    return 0;
}


